{"remainingRequest":"C:\\Users\\micha\\OneDrive\\Pulpit\\vue\\Vue Home App\\home-application-for-flatmates\\home-app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\micha\\OneDrive\\Pulpit\\vue\\Vue Home App\\home-application-for-flatmates\\home-app\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\micha\\OneDrive\\Pulpit\\vue\\Vue Home App\\home-application-for-flatmates\\home-app\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\micha\\OneDrive\\Pulpit\\vue\\Vue Home App\\home-application-for-flatmates\\home-app\\src\\components\\split-panel\\SplitPanel.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\micha\\OneDrive\\Pulpit\\vue\\Vue Home App\\home-application-for-flatmates\\home-app\\src\\components\\split-panel\\SplitPanel.vue","mtime":1636712650657},{"path":"C:\\Users\\micha\\OneDrive\\Pulpit\\vue\\Vue Home App\\home-application-for-flatmates\\home-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\micha\\OneDrive\\Pulpit\\vue\\Vue Home App\\home-application-for-flatmates\\home-app\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\micha\\OneDrive\\Pulpit\\vue\\Vue Home App\\home-application-for-flatmates\\home-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\micha\\OneDrive\\Pulpit\\vue\\Vue Home App\\home-application-for-flatmates\\home-app\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1632349277000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\Users\\micha\\OneDrive\\Pulpit\\vue\\Vue Home App\\home-application-for-flatmates\\home-app\\src\\components\\split-panel\\SplitPanel.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n\r\n    <div class=\"SplitPanel\">\r\n        <div class=\"split-title\">\r\n        <h1> Split Panel </h1>\r\n        </div>\r\n            \r\n        <div class=\"add-bills\">\r\n            <AddBill @GetBill=\"GetBill\" @ShowMembers=\"ShowMembers\" :MembersToSplit=\"MembersToSplit\" :MembersCountValue=\"MembersCountValue\"/>\r\n        </div>\r\n\r\n        <div class=\"members-details\">\r\n            <MembersDetails @GetMembers=\"GetMembers\" ref='MembersDetails' :FlatUsersToSend=\"FlatUsersToSend\"/>\r\n        </div>\r\n\r\n         <div class=\"bills-list\">\r\n            <h2> New Bills </h2>\r\n         <MyBills @RemoveBill=\"RemoveBill\" :BillsList=\"NewBillsToSend\" :debtToMe=\"debtToMe\" ref='MyBills'/>\r\n        </div>\r\n\r\n        <div class=\"bills-to-pay\">\r\n            <h2> Bills to pay </h2>\r\n         <BillsToGiveBack  :BillsListToPay=\"BillsToPay\" />\r\n        </div>\r\n\r\n       \r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport AddBill from './AddBill.vue'\r\nimport MyBills from './MyBills.vue'\r\nimport MembersDetails from './MembersDetails.vue'\r\nimport BillsToGiveBack from './BillsToGiveBack.vue'\r\nexport default{\r\n\r\n    components:{\r\n        AddBill,\r\n        MyBills,\r\n        MembersDetails,\r\n        BillsToGiveBack,\r\n       \r\n    },\r\n    data() {\r\n        return{\r\n       BillsList:[],\r\n       NewBillsToSend:[],\r\n       BillsToPay:[],\r\n       FlatUsersToSend:[],\r\n       debtToMe:0,\r\n       MembersToSplit: null,\r\n       MembersCountValue:\"\"\r\n        }\r\n \r\n    },\r\n \r\n    methods:{\r\n        GetBill(Bill){\r\n    \r\n       this.NewBillsToSend = this.NewBillsToSend.concat(Bill)\r\n   let sum = this.NewBillsToSend\r\n    .map(x => parseInt( x.owMeCount))\r\n    .filter(x => !isNaN(x))\r\n    .reduce((x, y) => x + y, 0); //sumoanie\r\n   this.debtToMe = sum\r\n         //console.log(\"sum: \"+ sum);\r\n        // console.log(this.NewBillsToSend[0])\r\n        //this.debtToMe = this.debtToMe + Bill.owMeCount\r\n        //console.log(this.NewBillsToSend[2].title)\r\n       \r\n       // suma owtome z lsity do debttome\r\n\r\n       \r\n        },\r\n\r\n        GetMembers(MembersCount,MembersCountValue){\r\n        this.MembersToSplit = MembersCount;\r\n        this.MembersCountValue= MembersCountValue\r\n        },\r\n\r\n        ShowMembers(){\r\n            this.$refs.MembersDetails.ShowMembers()\r\n        },\r\n\r\n        RemoveBill(bill){\r\n         const loadedEmail =  localStorage.getItem('emailStore')\r\n         \r\n            if(bill.membersValues.includes(loadedEmail))\r\n            {\r\n                this.debtToMe = this.debtToMe - ((bill.price/bill.members) * (bill.members-1))\r\n            }\r\n\r\n            else{\r\n                this.debtToMe = this.debtToMe - bill.price\r\n            }\r\n           \r\n            this.BillsList.splice(this.BillsList.indexOf(bill), 1);\r\n           \r\n            \r\n        },\r\n\r\n        async loadDuty(){\r\n            const response = await axios.get('http://localhost:4000/app/splitGet');\r\n          \r\n            const loadedEmail =  localStorage.getItem('emailStore')\r\n          \r\n        let dbBills = response.data.filter(e => e.email === loadedEmail)\r\n        this.NewBillsToSend = this.NewBillsToSend.concat(dbBills)\r\n      //console.log(this.NewBillsToSend)\r\n   let sum = this.NewBillsToSend.map(x => parseInt( x.owMeCount)).filter(x => !isNaN(x)).reduce((x, y) => x + y, 0);\r\n   this.debtToMe = sum\r\n             \r\n       },\r\n\r\n\r\n        async loadUsers(){\r\n            const response = await axios.get('http://localhost:4000/app/signupGet');\r\n            const loadedFlatId =  localStorage.getItem('flatIdStore')\r\n          \r\n   \r\n        let array = [...response.data]\r\n        let dbFlats = array.filter(e => e.flatId === loadedFlatId)\r\n        //console.log(loadedFlatId)\r\n\r\n        //this.FlatUsersToSend.push(dbFlats)\r\n        \r\n        this.FlatUsersToSend = this.FlatUsersToSend.concat(dbFlats)\r\n\r\n        //console.log(array)\r\n        // console.log(dbFlats)\r\n          // this.FlatUsersToSend = dbFlats\r\n       },\r\n\r\n\r\n        // my bills to send to other users\r\n            async loadMyBillsToPay(){\r\n            const response = await axios.get('http://localhost:4000/app/splitGet');\r\n          \r\n            const loadedEmail=localStorage.getItem('emailStore')\r\n          \r\n        let dbBillsToPay = response.data.filter(e => e.email !== loadedEmail)  //all bills created by other users\r\n        \r\n      \r\nconsole.log(dbBillsToPay)\r\n\r\n        for(let i=0; i<dbBillsToPay.length;i++ ){\r\n            if(dbBillsToPay[i].membersValues[0].includes(loadedEmail)){\r\n               \r\n                this.BillsToPay = this.BillsToPay.concat(dbBillsToPay[i])\r\n             \r\n                 \r\n            }\r\n        }\r\n\r\n             \r\n       },\r\n\r\n\r\n\r\n\r\n\r\n\r\n    },\r\n\r\n      mounted(){\r\n        \r\n        this.loadDuty()\r\n        this.loadUsers()\r\n        this.loadMyBillsToPay()\r\n    }\r\n\r\n    }\r\n\r\n</script>\r\n \r\n\r\n<style scoped>\r\n.SplitPanel{\r\n    width: 100%;\r\n    height: 80%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n\r\n}\r\n\r\n.add-bills{\r\n height: 20%;\r\n width: 60%;\r\n\r\n}\r\n\r\n.bills-list{\r\n    height:40%;\r\n    width: 90%;\r\n    text-align: center;\r\n \r\n}\r\n\r\n.bills-to-pay{\r\n    height:50%;\r\n    width: 90%;\r\n    text-align: center;\r\n}\r\n\r\n</style>"],"sourceRoot":""}]}